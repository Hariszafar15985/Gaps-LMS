function _createForOfIteratorHelper(e, t) {
    var n;
    if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
        if (Array.isArray(e) || (n = _unsupportedIterableToArray(e)) || (t && e && "number" == typeof e.length)) {
            n && (e = n);
            var r = 0,
                a = function () {};
            return {
                s: a,
                n: function () {
                    return r >= e.length ? { done: !0 } : { done: !1, value: e[r++] };
                },
                e: function (e) {
                    throw e;
                },
                f: a,
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o,
        i = !0,
        s = !1;
    return {
        s: function () {
            n = e[Symbol.iterator]();
        },
        n: function () {
            var e = n.next();
            return (i = e.done), e;
        },
        e: function (e) {
            (s = !0), (o = e);
        },
        f: function () {
            try {
                i || null == n.return || n.return();
            } finally {
                if (s) throw o;
            }
        },
    };
}
function _unsupportedIterableToArray(e, t) {
    if (e) {
        if ("string" == typeof e) return _arrayLikeToArray(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(e, t) : void 0;
    }
}
function _arrayLikeToArray(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
    return r;
}
!(function (e) {
    "use strict";
    function t() {
        for (var e = "", t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", n = 0; n < 5; n++) e += t.charAt(Math.floor(Math.random() * t.length));
        return e;
    }
    function n(t, n) {
        var r = serializeObjectByTag(t),
            a = t.attr("data-action");
        n.addClass("loadingbar primary").prop("disabled", !0),
            t.find("input").removeClass("is-invalid"),
            t.find("textarea").removeClass("is-invalid"),
            e
                .post(a, r, function (e) {
                    e &&
                        200 === e.code &&
                        (Swal.fire({ icon: "success", html: '<h3 class="font-20 text-center text-dark-blue py-25">' + saveSuccessLang + "</h3>", showConfirmButton: !1, width: "25rem" }),
                        setTimeout(function () {
                            window.location.reload();
                        }, 500));
                })
                .fail(function (e) {
                    n.removeClass("loadingbar primary").prop("disabled", !1);
                    var r = e.responseJSON;
                    r && "zoom_jwt_token_invalid" === r.status && Swal.fire({ icon: "error", html: '<h3 class="font-20 text-center text-dark-blue py-25">' + zoomJwtTokenInvalid + "</h3>", showConfirmButton: !1, width: "25rem" }),
                        r &&
                            r.errors &&
                            Object.keys(r.errors).forEach(function (e) {
                                var n = r.errors[e],
                                    a = t.find(".js-ajax-" + e);
                                "zoom-not-complete-alert" === e ? t.find(".js-zoom-not-complete-alert").removeClass("d-none") : (a.addClass("is-invalid"), a.parent().find(".invalid-feedback").text(n[0]));
                            });
                });
    }

    function handleAddLessonForm(t, n) {
        // var r = serializeObjectByTag(t)
        let sectionDiv = t;

        $('body').append("<form id='tempForm'></form>");

        let tempForm = $('#tempForm');
        tempForm.append(sectionDiv.clone());

        setTimeout(function(){
            let thisForm = document.getElementById('tempForm');
            console.log(thisForm);
            let formData = new FormData(thisForm);
            var a = t.attr("data-action");
            console.log(a);
            console.log('newForData:', formData);
            n.addClass("loadingbar primary").prop("disabled", !0),
                t.find("input").removeClass("is-invalid"),
                t.find("textarea").removeClass("is-invalid");

            $.ajax({
                url: a,
                type: 'POST',
                data: formData, // use the FormData object as the data to be submitted
                processData: false, // prevent jQuery from processing the data
                contentType: false, // let the browser set the content type automatically
                success: function(e) {
                    e && e.code == 200 &&
                    // success handling code here
                    //(Swal.fire({ icon: "success", html: '<h3 class="font-20 text-center text-dark-blue py-25">' + saveSuccessLang + "</h3>", showConfirmButton: !1, width: "25rem" }),
                    ($.toast({
                        heading: '',
                        text: saveSuccessLang,
                        bgColor: '#43d477',
                        textColor: 'white',
                        hideAfter: 2000,
                        position: 'bottom-right',
                        icon: 'success'
                    }),
                    setTimeout(function () {
                        window.location.reload();
                    }, 500));
                },
                error: function(err) {
                    // error handling code here
                    n.removeClass("loadingbar primary").prop("disabled", !1);
                        var r = e.responseJSON;
                        r && "zoom_jwt_token_invalid" === r.status && Swal.fire({ icon: "error", html: '<h3 class="font-20 text-center text-dark-blue py-25">' + zoomJwtTokenInvalid + "</h3>", showConfirmButton: !1, width: "25rem" }),
                            r &&
                                r.errors &&
                                Object.keys(r.errors).forEach(function (e) {
                                    var n = r.errors[e],
                                        a = t.find(".js-ajax-" + e);
                                    "zoom-not-complete-alert" === e ? t.find(".js-zoom-not-complete-alert").removeClass("d-none") : (a.addClass("is-invalid"), a.parent().find(".invalid-feedback").text(n[0]));
                                });
                },
                complete: function() {
                    tempForm.remove();
                }
            });
        }, 1000);

    }

    //function to generate randomstring
    function randomString() {
        var text = "";
        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        for (var i = 0; i < 5; i++)
            text += possible.charAt(Math.floor(Math.random() * possible.length));

        return text;
    }
    e("#summernote").length &&
        e("#summernote").summernote({
            tabsize: 2,
            height: 400,
            placeholder: e("#summernote").attr("placeholder"),
            dialogsInBody: !0,
            toolbar: [
                ["style", ["style"]],
                ["font", ["bold", "underline", "clear"]],
                ["fontname", ["fontname"]],
                ["color", ["color"]],
                ["para", ["paragraph"]],
                ["table", ["table"]],
                ["insert", ["link", "picture", "video"]],
                ["view", ["fullscreen", "codeview", "help"]],
            ],
        }),
        e("body").on("click", "#sendForReview", function (t) {
            e(this).addClass("loadingbar primary").prop("disabled", !0),
                t.preventDefault(),
                e("#forDraft").val(0),
                e("#webinarForm").append('<input type="hidden" name="action_button" value="sendForReview" />'),
                e("#webinarForm").trigger("submit");
        }),
        e("body").on("click", "#saveAsDraft", function (t) {
            e(this).addClass("loadingbar primary").prop("disabled", !0),
                t.preventDefault(),
                e("#forDraft").val(1),
                e("#webinarForm").append('<input type="hidden" name="action_button" value="saveAsDraft" />'),
                e("#webinarForm").trigger("submit");
        }),
        e("body").on("click", "#getNextStep", function (t) {
            e(this).addClass("loadingbar primary").prop("disabled", !0), t.preventDefault(), e("#forDraft").val(1), e("#getNext").val(1), e("#webinarForm").trigger("submit");
        }),
        e("body").on("click", ".js-get-next-step", function (t) {
            if ((t.preventDefault(), !e(this).hasClass("active"))) {
                e(this).addClass("loadingbar primary").prop("disabled", !0);
                var n = e(this).attr("data-step");
                e("#getStep").val(n), e("#forDraft").val(1), e("#getNext").val(1), e("#webinarForm").trigger("submit");
            }
        }),
        e("#partnerInstructorSwitch").on("change.bootstrapSwitch", function (t) {
            t.target.checked ? (e("#partnerInstructorInput").removeClass("d-none"), panelSearchUserSelect2()) : e("#partnerInstructorInput").addClass("d-none");
        }),
        e("body").on("change", "#categories", function (t) {
            t.preventDefault();
            var n = this.value;
            e.get("/panel/filters/get-by-category-id/" + n, function (t) {
                if (t && void 0 !== t.filters && t.filters.length) {
                    var n = "";
                    Object.keys(t.filters).forEach(function (e) {
                        var r = t.filters[e],
                            a = [];
                        r.options.length && (a = r.options),
                            (n += '<div class="col-12 col-md-3">\n<div class="webinar-category-filters">\n<strong class="category-filter-title d-block">' + r.title + '</strong>\n<div class="py-10"></div>\n\n'),
                            a.length &&
                                Object.keys(a).forEach(function (e) {
                                    var t = a[e];
                                    n +=
                                        '<div class="form-group mt-20 d-flex align-items-center justify-content-between">\n<label class="cursor-pointer" for="filterOption' +
                                        t.id +
                                        '">' +
                                        t.title +
                                        '</label>\n<div class="custom-control custom-checkbox">\n<input type="checkbox" name="filters[]" value="' +
                                        t.id +
                                        '" class="custom-control-input" id="filterOption' +
                                        t.id +
                                        '">\n<label class="custom-control-label" for="filterOption' +
                                        t.id +
                                        '"></label>\n</div>\n</div>\n';
                                }),
                            (n += "</div></div>");
                    }),
                        e("#categoriesFiltersContainer").removeClass("d-none"),
                        e("#categoriesFiltersCard").html(n);
                } else e("#categoriesFiltersContainer").addClass("d-none"), e("#categoriesFiltersCard").html("");
            });
        }),
        e("body").on("click", ".cancel-accordion", function (t) {
            t.preventDefault(), e(this).closest(".accordion-row").remove();
        }),
        e("body").on("click", "#webinarAddTicket", function (n) {
            n.preventDefault();
            var r = t(),
                a = e("#newTicketForm").html();
            (a = a.replaceAll("record", r)), e("#ticketsAccordion").prepend(a), resetDatePickers(), feather.replace();
        }),
        e("body").on("click", ".js-save-ticket", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".ticket-form"), r);
        }),
        e("body").on("click", ".save-chapter", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".chapter-form"), r);
        }),
        e("body").on("click", ".js-add-chapter", function (n) {
            var r = e(this),
                a = r.attr("data-webinar-id"),
                o = r.attr("data-type"),
                i = r.attr("data-chapter"),
                s = r.attr("data-locale"),
                l = i || t(),
                c = e("#chapterModalHtml").clone();
            c.removeClass("d-none");
            var d = c.prop("innerHTML");
            (d = d.replaceAll("record", l)),
                c.html('<div id="chapterModal' + l + '">' + d + "</div>"),
                Swal.fire({
                    html: c,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "36rem",
                    onOpen: function () {
                        var t = e("#chapterModal" + l);
                        if ((t.find("input.js-chapter-webinar-id").val(a), t.find("input.js-chapter-type").val(o), i)) {
                            t.find(".section-title").text(editChapterLang);
                            var n = "/panel/chapters/" + i + "/update";
                            t.find(".chapter-form").attr("data-action", n),
                                e.get("/panel/chapters/" + i + "?locale=" + s, function (e) {
                                    if (e && e.chapter) {
                                        t.find(".js-ajax-title").val(e.chapter.title);
                                        var n = t.find(".js-switch");
                                        "active" === e.chapter.status ? n.prop("checked", !0) : n.prop("checked", !1);
                                        var r = t.find(".js-chapter-locale");
                                        r.val(s), r.addClass("js-webinar-content-locale"), r.attr("data-id", i);
                                    }
                                });
                        }
                    },
                });
        }),
        // e("body").on("click", ".add-course-content-btn", function (n) {
        //     n.preventDefault();
        //     var r = e(this),
        //         a = r.attr("data-type"),
        //         o = r.attr("data-chapter"),
        //         i = "#chapterContentAccordion" + o,
        //         s = t(),
        //         l = "";
        //     switch (a) {
        //         case "file":
        //             var c = e("#newFileForm");
        //             c.find(".chapter-input").val(o), (l = (l = c.html()).replace(/record/g, s)), e(i).prepend(l);
        //             break;
        //         case "session":
        //             var d = e("#newSessionForm");
        //             d.find(".chapter-input").val(o), (l = (l = d.html()).replace(/record/g, s)), e(i).prepend(l);
        //             break;
        //         case "text_lesson":
        //             var u = e("#newTextLessonForm");
        //             u.find(".chapter-input").val(o),
        //                 (l = (l = (l = (l = (l = u.html()).replace(/record/g, s)).replaceAll("attachments-select2", "attachments-select2-" + s)).replaceAll("js-content-summernote", "js-content-summernote-" + s)).replaceAll(
        //                     "js-hidden-content-summernote",
        //                     "js-hidden-content-summernote-" + s
        //                 )),
        //                 e(i).prepend(l),
        //                 e(".attachments-select2-" + s).select2({ multiple: !0, width: "100%" }),
        //                 e(".js-content-summernote-" + s).summernote({
        //                     tabsize: 2,
        //                     height: 400,
        //                     callbacks: {
        //                         onChange: function (t, n) {
        //                             e(".js-hidden-content-summernote-" + s).val(t);
        //                         },
        //                     },
        //                 });
        //     }
        //     resetDatePickers(), feather.replace();
        // }),
        $('body').on('click', '.js-add-course-content-btn', function (e) {
            e.preventDefault();
            const $this = $(this);
            const type = $this.attr('data-type');
            const chapterId = $this.attr('data-chapter');

            const contentTagId = '#chapterContentAccordion' + chapterId;
            const key = randomString();
            var html = '';

            switch (type) {
                case 'file':
                    const newFileForm = $('#newFileForm');
                    newFileForm.find('.chapter-input').val(chapterId);
                    html = newFileForm.html();

                    html = html.replace(/record/g, key);

                    $(contentTagId).prepend(html);

                    break;
                case 'new_interactive_file':
                    const newInteractiveFile = $('#newInteractiveFileForm');
                    newInteractiveFile.find('.chapter-input').val(chapterId);
                    html = newInteractiveFile.html();

                    html = html.replace(/record/g, key);

                    $(contentTagId).prepend(html);

                    break;
                case 'new_assessment':
                    const newAssessment = $('#newAssessmentForm');
                    newAssessment.find('.chapter-input').val(chapterId);
                    html = newAssessment.html();

                    html = html.replace(/record/g, key);

                    $(contentTagId).prepend(html);

                    break;
                case 'session':
                    const newSessionForm = $('#newSessionForm');
                    newSessionForm.find('.chapter-input').val(chapterId);
                    html = newSessionForm.html();

                    html = html.replace(/record/g, key);

                    $(contentTagId).prepend(html);
                    break;
                case 'text_lesson':
                    const newTextLessonForm = $('#newTextLessonForm');
                    newTextLessonForm.find('.chapter-input').val(chapterId);
                    html = newTextLessonForm.html();

                    html = html.replace(/record/g, key);

                    html = html.replaceAll('attachments-select2', 'attachments-select2-' + key);
                    html = html.replaceAll('js-content-summernote', 'js-content-summernote-' + key);
                    html = html.replaceAll('js-hidden-content-summernote', 'js-hidden-content-summernote-' + key);

                    $(contentTagId).prepend(html);

                    $('.attachments-select2-' + key).select2({
                        multiple: true,
                        width: '100%',
                    });

                    $('.js-content-summernote-' + key).summernote({
                        tabsize: 2,
                        height: 400,
                        callbacks: {
                            onChange: function (contents, $editable) {
                                $('.js-hidden-content-summernote-' + key).val(contents);
                            }
                        }
                    });

                    break;
            }

            resetDatePickers();
            feather.replace();
        });
        e("body").on("click", ".js-save-session", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".session-form"), r);
        }),
        e("body").on("click", ".js-save-file", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".file-form"), r);
        }),
        e("body").on("click", ".js-save-quiz", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".quiz-form"), r);
        }),
        e("body").on("click", ".js-save-text_lesson", function (t) {
            console.log('yes');
            t.preventDefault();
            var r = e(this);
            console.log(r.closest(".text_lesson-form").html());
            handleAddLessonForm(r.closest(".text_lesson-form"), r);
        }),
        e(document).ready(function () {
            var t = e(".accordion-content-wrapper .js-content-summernote");
            t.length &&
                t.summernote({
                    tabsize: 2,
                    height: 400,
                    callbacks: {
                        onChange: function (t, n) {
                            e(".js-hidden-content-summernote").val(t);
                        },
                    },
                }),
                setTimeout(function () {
                    var t;
                    (t = e("body #prerequisitesAccordion .prerequisites-select2")).length &&
                        t.select2({
                            minimumInputLength: 3,
                            allowClear: !0,
                            ajax: {
                                url: "/panel/webinars/search",
                                dataType: "json",
                                type: "POST",
                                quietMillis: 50,
                                data: function (t) {
                                    return { term: t.term, webinar_id: e(this).data("webinar-id") };
                                },
                                processResults: function (t) {
                                    return {
                                        results: e.map(t, function (e) {
                                            return { text: e.title, id: e.id };
                                        }),
                                    };
                                },
                            },
                        }),
                        e(".accordion-content-wrapper .attachments-select2").length && e(".accordion-content-wrapper .attachments-select2").select2({ multiple: !0, width: "100%" });
                }, 1e3);
        }),
        e("body").on("click", "#webinarAddPrerequisites", function (n) {
            n.preventDefault();
            var r = t(),
                a = e("#newPrerequisiteForm").html();
            (a = (a = a.replaceAll("record", r)).replaceAll("prerequisites-select2", "prerequisites-select2-" + r)),
                e("#prerequisitesAccordion").prepend(a),
                e(".prerequisites-select2-" + r).select2({
                    placeholder: e(this).data("placeholder"),
                    minimumInputLength: 3,
                    allowClear: !0,
                    ajax: {
                        url: "/panel/webinars/search",
                        dataType: "json",
                        type: "POST",
                        quietMillis: 50,
                        data: function (t) {
                            return { term: t.term, webinar_id: e(this).data("webinar-id") };
                        },
                        processResults: function (t) {
                            return {
                                results: e.map(t, function (e) {
                                    return { text: e.title, id: e.id };
                                }),
                            };
                        },
                    },
                }),
                feather.replace();
        }),
        e("body").on("click", ".js-save-prerequisite", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".prerequisite-form"), r);
        }),
        e("body").on("click", "#webinarAddFAQ", function (n) {
            n.preventDefault();
            var r = t(),
                a = e("#newFaqForm").html();
            (a = a.replaceAll("record", r)), e("#faqsAccordion").prepend(a), feather.replace();
        }),
        e("body").on("click", ".js-save-faq", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".faq-form"), r);
        }),
        e("body").on("click", "#webinarAddQuiz", function (n) {
            n.preventDefault();
            var r = t(),
                a = e("#newQuizForm").html();
            (a = a.replaceAll("record", r)), e("#quizzesAccordion").prepend(a), feather.replace();
        }),
        e("body").on("click", ".js-save-quiz", function (t) {
            t.preventDefault();
            var r = e(this);
            n(r.closest(".quiz-form"), r);
        }),
        e(document).ready(function () {
            function t(t) {
                t.length &&
                    t.sortable({
                        group: "no-drop",
                        handle: ".move-icon",
                        axis: "y",
                        update: function (n, r) {
                            var a = t.sortable("toArray", { attribute: "data-id" });
                            !(function (t, n) {
                                if ("text_lessons" == t) {
                                    var r = e(".draggable-lists-chapter-text_lesson .ui-sortable li.accordion-row");
                                    (n = ""),
                                        r.each(function (e, t) {
                                            void 0 !== t && t.hasAttribute("data-id") && (n = 0 === n.length ? parseInt(t.getAttribute("data-id")) : n + "," + parseInt(t.getAttribute("data-id")));
                                        });
                                }
                                e.post("/panel/webinars/order-items", { table: t, items: n }, function (e) {});
                            })(n.target.getAttribute("data-order-table"), a.join(","));
                        },
                    });
            }
            var n = e(".draggable-lists"),
                r = e(".draggable-lists2"),
                a = e(".draggable-lists3"),
                o = [],
                i = e(".draggable-content-lists");
            if (i.length) {
                var s,
                    l = _createForOfIteratorHelper(i);
                try {
                    for (l.s(); !(s = l.n()).done; ) {
                        var c = s.value;
                        o.push(e(c).attr("data-drag-class"));
                    }
                } catch (e) {
                    l.e(e);
                } finally {
                    l.f();
                }
            }
            if (o.length) {
                var d,
                    u = _createForOfIteratorHelper(o);
                try {
                    for (u.s(); !(d = u.n()).done; ) {
                        var p = d.value,
                            f = e("." + p);
                        f.length && t(f);
                    }
                } catch (e) {
                    u.e(e);
                } finally {
                    u.f();
                }
            }
            t(n), r.length && t(r), a.length && t(a);
        }),
        e("body").on("change", ".js-file-storage", function (t) {
            t.preventDefault();
            var n = e(this).attr("value"),
                r = e(this).closest(".file-form");
            this.checked && "online" === n
                ? (r.find(".local-input").addClass("d-none"), r.find(".online-inputs").removeClass("d-none"), r.find(".js-downloadable-file").addClass("d-none"), r.find(".js-downloadable-file input").prop("checked", !1))
                : (r.find(".local-input").removeClass("d-none"), r.find(".online-inputs").addClass("d-none"), r.find(".js-downloadable-file").removeClass("d-none"), r.find(".js-downloadable-file input").prop("checked", !0));
        }),
        e("body").on("change", ".js-api-input", function (t) {
            t.preventDefault();
            var n = e(this).closest(".session-form"),
                r = this.value;
            n.find(".js-zoom-not-complete-alert").addClass("d-none"),
                "big_blue_button" === r
                    ? (n.find(".js-local-link").addClass("d-none"), n.find(".js-api-secret").removeClass("d-none"), n.find(".js-moderator-secret").removeClass("d-none"))
                    : "zoom" === r
                    ? (n.find(".js-local-link").addClass("d-none"),
                      n.find(".js-api-secret").addClass("d-none"),
                      n.find(".js-moderator-secret").addClass("d-none"),
                      hasZoomApiToken && "true" !== hasZoomApiToken && n.find(".js-zoom-not-complete-alert").removeClass("d-none"))
                    : (n.find(".js-local-link").removeClass("d-none"), n.find(".js-api-secret").removeClass("d-none"), n.find(".js-moderator-secret").addClass("d-none"));
        });
})(jQuery);
